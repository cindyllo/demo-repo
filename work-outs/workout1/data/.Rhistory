pricesqft
house$Price[1]
house$Price[1] / house$Living.Area[1]
pricesqft[1]
hist(log(pricesqft))
hist(pricesqft)
hist(house$Price)
hist(house$Living.Area)
hist(log_price)
hist(log_livingarea)
hist(log(pricesqft))
hist(log(pricesqft))
hist(pricesqft)
pricesqft[which(pricesqft > 600)]
pricesqft[which(pricesqft > 400)]
pricesqft[which(pricesqft > 300)]
pricesqft[which(pricesqft > 400)]
knitr::opts_chunk$set(echo = TRUE)
#https://github.com/ucb-stat133/stat133-fall-2018/raw/master/data/saratoga.txt
github <- "https://github.com/ucb-stat133/stat133-fall-2018/"
repo <- "raw/master/data/saratoga.txt"
house <- read.table(paste0(github,repo), header = TRUE, sep = "\t")
str(house)
summary(house$Price)
hist(house$Price)
log_price <- log(house$Price)
hist(log_price)
cheap <- log_price < 10.5
sum(cheap)
log_price[log_price < 10.5]
house2 <- subset(house, cheap == FALSE)
summary(house$Living.Area)
hist(house$Living.Area)
log_livingarea <- log(house$Living.Area)
hist(log_livingarea)
BR <- house$Bedrooms
BR[BR > 5] <- 5
BR[BR < 2] <- 2
BR <- factor(BR, labels = c("2- BR", "3 BR", "4 BR", "5+ BR"))
summary(house$Bedrooms)
summary(BR)
br_colors <- house$Bedrooms
br_colors[br_colors > 5] <- 5
br_colors[br_colors < 2] <- 2
br_colors[br_colors == 2] <- my_colors[1]
br_colors[br_colors == 3] <- my_colors[2]
br_colors[br_colors == 4] <- my_colors[3]
br_colors[br_colors == 5] <- my_colors[4]
br_colors
plot(house$Price ~ house$Living.Area, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(BR), title = "# Bedrooms", cex = 0.75)
FP <- house$Fireplaces
FP[FP > 1] <- 1
FP <- factor(FP, labels = c("None", "At least 1"))
FP
pricesqft <- house$Price/house$Living.Area
pricesqft
hist(pricesqft)
hist(house$Price)
hist(house$Living.Area)
hist(log_price)
hist(log_livingarea)
hist(log(pricesqft))
fp_colors <- FP
fp_colors
fp_colors[fp_colors == "None"] <- my_colors[1]
fp_colors[fp_colors == NA] <- my_colors[1]
fp_colors[1] <- my_colors[1]
fp_colors[[1]] <- my_colors[1]
fp_colors <- FP
fp_colors <- house$Fireplaces
fp_colors[fp_colors > 1] <- 1
fp_colors[fp_colors == 1] <- my_colors[2]
fp_colors[fp_colors == 0] <- my_colors[1]
fp_colors
plot(log_price ~ log_livingarea, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(BR), title = "# Bedrooms", cex = 0.75)
plot(log_price ~ log_livingarea, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(BR), title = "# Bedrooms", cex = 0.75)
hist(pricesqft)
hist(house$Price)
hist(house$Living.Area)
hist(log_price)
hist(log_livingarea)
hist(log(pricesqft))
plot(log(pricesqft) ~ log_price, data = house, log = "xy", main = "", xlab = "Price per Sq. Ft (log $ per sq ft", ylab = "Priec (log $)", col = fp_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(FP), title = "# of Fireplaces", cex = 0.75)
plot(pricesqft ~ house$Price, data = house, log = "xy", main = "", xlab = "Price per Sq. Ft (log $ per sq ft", ylab = "Priec (log $)", col = fp_colors, pch = 19, cex = 0.4)
cor(log_price, log_pricesqft)
log_pricesqft <- log(pricesqft)
cor(log_price, log_pricesqft)
??read.table
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
origin <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data'
destination <- 'abalone.data'
download.file(origin, destination)
ls
ls()
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
column_names <- c("Sex", "Length", "Diameter", "Height", "Whole weight", "Shucked weight", "Viscera weight", "Shell weight", "Rings")
column_types <- c("character", "numeric", "real", "real", "real", "real", "real", "real", "integer")
abalone <- read.table("abalone.data", sep = ",", col.names = column_names, colClasses = column_types)
str(abalone)
abalone2 <- read.csv("abalone.data", sep = ",", col.names = column_names, colClasses = column_types)
str(abalone2)
abalone10 <- head(abalone, 10)
str(abalone10)
abalone20 <- head(abalone, skip = 10, 10)
str(abalone20)
summary(abalone)
apply(abalone, 2, sd)
knitr::opts_chunk$set(echo = TRUE)
git diff HEAD~2 mars.txt
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE, fig.path = '../images/')
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(position ~ .) +
geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(position ~ .) +
geom_smooth(method = loess)
mkdir data report images
library(ggplot2)
library(dplyr)
library(readr)
library(dplyr)
library(ggplot2)
library(readr)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read_csv('nba2018-players.csv')
three_rows <- slice(dat, 1:3)
three_rows
three_rows <- slice(dat, 1:3)
three_rows
knitr::opts_chunk$set(echo = TRUE, fig.path = '../images/')
library(dplyr)
library(ggplot2)
library(readr)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read_csv('nba2018-players.csv')
knitr::opts_chunk$set(echo = TRUE, fig.path = '../images/')
library(dplyr)
library(ggplot2)
library(readr)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read_csv('nba2018-players.csv')
knitr::opts_chunk$set(echo = TRUE, fig.path = '../images/')
library(dplyr)
library(ggplot2)
library(readr)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read_csv('nba2018-players.csv')
three_rows <- slice(dat, 1:3)
three_rows
gt_85 <- filter(dat, height > 85)
gt_85
player_height <- select(dat, player, height)
player_height
five_rows <- slice(dat, 1:5)
five_rows
by_five <- slice(dat, 5*(2:10))
by_five
last_five <- slice(dat, 472:477)
last_five
small_70 <- filter(dat, height < 70)
small_70
nba_gsw <- filter(dat, team == "GSW")
nba_gsw
nba_gsw_C <- filter(nba_gsw, position == "C")
nba_gsw_C
nba_lal <- filter(dat, team == "LAL")
nba_lal_players <- select(nba_lal, player)
nba_lal_players
nba_gsw_PG <- filter(nba_gsw, position == "PG")
player_salary <- select(nba_gsw_PG, player, salary)
player_salary
nba_10yr10mill <- filter(dat, experience > 10 & salary <= 10000000)
nba_10yr10millshow <- select(nba_10yr10mill, player, age, team)
nba_10yr10millshow
rookie_20 <- filter(dat, experience <= 10 & age == 20)
rookienthw <- select(rookie_20, player, team, height, weight)
head(rookienthw, 5)
gsw <- filter(dat, team == "GSW")
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
mutate(gsw, ht_wt = height/weight)
gsw2 <- mutate(gsw, ht_m = height * 0.0254, wt_kg = weight * 0.4536)
gsw2
arrange(gsw, height)
arrange(gsw, desc(height))
arrange(gsw, height, weight)
gsw <- mutate(gsw, product = height*weight)
gsw
gsw3 <- mutate(gsw, log_height = log(height), log_weight = log(weight))
gsw3
small_71 <- filter(dat, height < 71)
arrange(small_71, height)
top_paid <- arrange(dat, desc(salary))
top_paid <- select(top_paid, player, team, salary)
head(top_paid, 5)
top_points3 <- arrange(dat, desc(points3))
top_points3 <- select(top_points3, player, team, points3)
head(top_points3, 10)
gsw_mpg <- filter(dat, team == "GSW")
gsw_mpg <- mutate(gsw_mpg, min_per_game = minutes / games)
gsw_mpg <- select(gsw_mpg, player, experience, min_per_game)
gsw_mpg <- select(gsw_mpg, player, experience, min_per_game)
gsw_mpg <- arrange(gsw_mpg, desc(min_per_game))
gsw_mpg
summarise(dat, avg_salary = mean(salary))
summarise(dat,
min = min(salary),
median = median(salary),
avg = mean(salary),
max = max(salary))
#average salary, grouped by team
summarise(
group_by(dat, team),
avg_salary = mean(salary)
)
#average salary, grouped by position
summarise(
group_by(dat, position),
avg_salary = mean(salary)
)
#average weight and height, grouped by position, in descending order of average height
arrange(
summarise(
group_by(dat, position),
avg_height = mean(height),
avg_weight = mean(weight)),
desc(avg_height)
)
summarise(dat, max_height = max(height))
summarise(dat, sd_points3 = sd(points3))
summarise(group_by(dat, team), median_points3 = median(points3))
head(
arrange(
summarise(
group_by(dat, team),
avg_points3 = mean(points3)),
avg_points3),
5)
pf_5_10 <- filter(dat, position == "PF" & (experience == 5 | experience == 10))
summarise(pf_5_10, mean_of_pf510 = mean(age), standard_deviation_pf510 = sd(age))
# scatterplot (option 1)
ggplot(data = dat) + geom_point(aes(x = points, y = salary))
# scatterplot (option 2)
ggplot(data = dat, aes(x = points, y = salary)) + geom_point()
# colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) + geom_point(aes(color = position))
#sized and colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) + geom_point(aes(color = position, size = points3))
#sized and colored scatterplot but transparent
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position, size = points3), alpha = 0.7)
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point(aes(color = player), alpha = 0.4)
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point(aes(color = player), alpha = 0.4) + geom_text(aes(label = player), nudge_x = 1, nudge_y = 1)
gsw_all <- filter(dat, team == "GSW")
ggplot(data = gsw_all, aes(x = height, y = weight)) + geom_point(aes(color = player), alpha = 0.3) + geom_label(aes(label = player), nudge_x = 1, nudge_y = 1, alpha = 0.1)
ggplot(dat, aes(salary)) + geom_density(kernel = "gaussian", fill = "pink")
ggplot(dat, aes(points2)) + geom_histogram(binwidth = 50, fill = "lavender")
ggplot(dat, aes(position)) + geom_bar(fill = "light blue")
centers <- filter(dat, position == "C")
ggplot(data = centers, aes(x = experience, y = salary)) + geom_point() + geom_smooth(method = lm)
ggplot(data = centers, aes(x = experience, y = salary)) + geom_point() + geom_smooth(method = loess)
#scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) + geom_point() + facet_wrap(~ position)
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(~ position) +
geom_smooth(method = loess)
knitr::opts_chunk$set(echo = TRUE, fig.path = '../images/')
library(dplyr)
library(ggplot2)
library(readr)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read_csv('nba2018-players.csv')
three_rows <- slice(dat, 1:3)
three_rows
gt_85 <- filter(dat, height > 85)
gt_85
player_height <- select(dat, player, height)
player_height
five_rows <- slice(dat, 1:5)
five_rows
by_five <- slice(dat, 5*(2:10))
by_five
last_five <- slice(dat, 472:477)
last_five
small_70 <- filter(dat, height < 70)
small_70
nba_gsw <- filter(dat, team == "GSW")
nba_gsw
nba_gsw_C <- filter(nba_gsw, position == "C")
nba_gsw_C
nba_lal <- filter(dat, team == "LAL")
nba_lal_players <- select(nba_lal, player)
nba_lal_players
nba_gsw_PG <- filter(nba_gsw, position == "PG")
player_salary <- select(nba_gsw_PG, player, salary)
player_salary
nba_10yr10mill <- filter(dat, experience > 10 & salary <= 10000000)
nba_10yr10millshow <- select(nba_10yr10mill, player, age, team)
nba_10yr10millshow
rookie_20 <- filter(dat, experience <= 10 & age == 20)
rookienthw <- select(rookie_20, player, team, height, weight)
head(rookienthw, 5)
gsw <- filter(dat, team == "GSW")
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
mutate(gsw, ht_wt = height/weight)
gsw2 <- mutate(gsw, ht_m = height * 0.0254, wt_kg = weight * 0.4536)
gsw2
arrange(gsw, height)
arrange(gsw, desc(height))
arrange(gsw, height, weight)
gsw <- mutate(gsw, product = height*weight)
gsw
gsw3 <- mutate(gsw, log_height = log(height), log_weight = log(weight))
gsw3
small_71 <- filter(dat, height < 71)
arrange(small_71, height)
top_paid <- arrange(dat, desc(salary))
top_paid <- select(top_paid, player, team, salary)
head(top_paid, 5)
top_points3 <- arrange(dat, desc(points3))
top_points3 <- select(top_points3, player, team, points3)
head(top_points3, 10)
gsw_mpg <- filter(dat, team == "GSW")
gsw_mpg <- mutate(gsw_mpg, min_per_game = minutes / games)
gsw_mpg <- select(gsw_mpg, player, experience, min_per_game)
gsw_mpg <- select(gsw_mpg, player, experience, min_per_game)
gsw_mpg <- arrange(gsw_mpg, desc(min_per_game))
gsw_mpg
summarise(dat, avg_salary = mean(salary))
summarise(dat,
min = min(salary),
median = median(salary),
avg = mean(salary),
max = max(salary))
#average salary, grouped by team
summarise(
group_by(dat, team),
avg_salary = mean(salary)
)
#average salary, grouped by position
summarise(
group_by(dat, position),
avg_salary = mean(salary)
)
#average weight and height, grouped by position, in descending order of average height
arrange(
summarise(
group_by(dat, position),
avg_height = mean(height),
avg_weight = mean(weight)),
desc(avg_height)
)
summarise(dat, max_height = max(height))
summarise(dat, sd_points3 = sd(points3))
summarise(group_by(dat, team), median_points3 = median(points3))
head(
arrange(
summarise(
group_by(dat, team),
avg_points3 = mean(points3)),
avg_points3),
5)
pf_5_10 <- filter(dat, position == "PF" & (experience == 5 | experience == 10))
summarise(pf_5_10, mean_of_pf510 = mean(age), standard_deviation_pf510 = sd(age))
# scatterplot (option 1)
ggplot(data = dat) + geom_point(aes(x = points, y = salary))
# scatterplot (option 2)
ggplot(data = dat, aes(x = points, y = salary)) + geom_point()
# colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) + geom_point(aes(color = position))
#sized and colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) + geom_point(aes(color = position, size = points3))
#sized and colored scatterplot but transparent
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position, size = points3), alpha = 0.7)
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point(aes(color = player), alpha = 0.4)
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point(aes(color = player), alpha = 0.4) + geom_text(aes(label = player), nudge_x = 1, nudge_y = 1)
gsw_all <- filter(dat, team == "GSW")
ggplot(data = gsw_all, aes(x = height, y = weight)) + geom_point(aes(color = player), alpha = 0.3) + geom_label(aes(label = player), nudge_x = 1, nudge_y = 1, alpha = 0.1)
ggplot(dat, aes(salary)) + geom_density(kernel = "gaussian", fill = "pink")
ggplot(dat, aes(points2)) + geom_histogram(binwidth = 50, fill = "lavender")
ggplot(dat, aes(position)) + geom_bar(fill = "light blue")
centers <- filter(dat, position == "C")
ggplot(data = centers, aes(x = experience, y = salary)) + geom_point() + geom_smooth(method = lm)
ggplot(data = centers, aes(x = experience, y = salary)) + geom_point() + geom_smooth(method = loess)
#scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) + geom_point() + facet_wrap(~ position)
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(~ position) +
geom_smooth(method = loess)
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(position ~ .) +
geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(position ~ .) +
geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = team), alpha = 0.7) +
facet_grid(~ team) +
geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = team), alpha = 0.7) +
facet_wrap(~ team) +
geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = team), alpha = 0.7) +
facet_wrap(~ team)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = team), alpha = 0.7) +
facet_grid(~ team)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = team), alpha = 0.7) +
facet_grid(team. ~)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = team), alpha = 0.7) +
facet_grid(team . ~)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = team), alpha = 0.7) +
facet_grid(team .~)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(aes(color = team), alpha = 0.7) +
facet_grid(team ~ .)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point() +
facet_grid(team ~ .) + geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point() +
facet_wrap(team ~ .) + geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point() +
facet_wrap(~ team) + geom_smooth(method = loess)
team ~ .
team ~ .
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point() +
facet_wrap(team ~ .) + geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) + geom_point() + facet_wrap(team ~ .)
ggplot(data = dat, aes(age)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(team ~ .)
ggplot(dat, aes(salary)) + geom_density(kernel = "gaussian", fill = "pink") + facet_wrap(team ~ .)
ggplot(dat, aes(salary)) + geom_density(kernel = "gaussian", fill = "snow") + facet_wrap(team ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + facet_wrap(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) +facet_wrap(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_wrap(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + facet_wrap(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_wrap(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_wrap(position ~ .) + geom_smooth(method = loess)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_wrap(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_wrap(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + geom_smooth(method = loess)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_wrap(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_wgrid(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + geom_smooth(method = loess)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_wrap(position ~ .) + geom_density2d()
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + geom_density2d()
ggplot(data = dat, aes(x = experience, y = salary)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + theme_bw()
ggplot(data = gsw, aes(x = experience, y = salary)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + theme_bw()
ggplot(data = gsw_all, aes(x = experience, y = salary)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + theme_bw()
warriors <- filter(dat, position == "GSW")
ggplot(data = warriors, aes(x = experience, y = salary)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + theme_bw()
warriors
dat
warriors
warriors <- filter(dat, team == "GSW")
ggplot(data = warriors, aes(x = experience, y = salary)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + theme_bw()
warriors <- filter(dat, team == "GSW")
ggplot(data = warriors, aes(x = experience, y = salary)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + theme_bw()
ggplot(data = warriors, aes(x = experience, y = salary)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + theme_minimal()
ggplot(data = warriors, aes(x = experience, y = salary)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + theme_dark()
ggplot(data = warriors, aes(x = experience, y = salary)) + geom_point() + geom_point(aes(color = position), alpha = 0.7) + facet_grid(position ~ .) + theme_classic()
setwd("./Desktop/stat133/demo-repo")
setwd("./work-outs")
setwd("./workout1")
setwd("./data")
mkdir
wd
wd()
setwd()
setwd("./workout01/data")
setwd("~/Desktop/stat133/demo-repo/work-outs/workout1/data")
setwd("./workout01/data")
curl -O https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2018/master/data/nba2018.csv
curl -0 https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2018/master/data/nba2018.csv
clear()
clean()
clear
