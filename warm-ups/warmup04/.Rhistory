BR <- factor(BR, labels = c("2-BR", "3-BR", "4-BR", "5+ BR"))
summary(house$Bedrooms)
summary(BR)
br_colors <- BR
br_colors[br_colors == "2- BR"] <- my_colors[1]
br_colors[br_colors == "3- BR"] <- my_colors[2]
br_colors[br_colors == "4- BR"] <- my_colors[3]
br_colors[br_colors == "5+ BR"] <- my_colors[4]
br_colors[br_colors == 2- BR] <- my_colors[1]
br_colors
br_colors[br_colors == '2- BR'] <- my_colors[1]
br_colors[br_colors == 2-BR] <- my_colors[1]
br_colors[br_colors == "2-BR"] <- my_colors[1]
BR <- house$Bedrooms
BR[BR > 5] <- 5
BR[BR < 2] <- 2
BR <- factor(BR, labels = c("2- BR", "3 BR", "4 BR", "5+ BR"))
br_colors <- BR
br_colors[br_colors == "2- BR"] <- my_colors[1]
br_colors[br_colors == "3 BR"] <- my_colors[2]
br_colors[br_colors == "4 BR"] <- my_colors[3]
br_colors[br_colors == "5+ BR"] <- my_colors[4]
br_colors
br_colors <- BR
br_colors
summary(house$Bedrooms)
summary(BR)
br_colors
br_colors
br_colors[2- BR, my_colors[1]]
br_colors["2- BR", my_colors[1]]
br_colors["2- BR", my_colors[1], exact = TRUE]
br_colors["2- BR", my_colors]
br_colors[factor("2- BR")]
br_colors[br_colors == factor("2- BR")] <- my_colors[1]
br_colors[br_colors == factor("2- BR")] <- factor(my_colors[1])
br_colors <- BR
br_colors[br_colors == factor("2- BR")]
br_colors[which(br_colors == factor("2- BR"))]
br_colors[whichfactor("2- BR"))]
br_colors[which(factor("2- BR"))]
br_colors[which(br_colors = "2- BR")]
br_colors[which(br_colors == "2- BR")]
br_colors[which(br_colors == "2- BR")] <- my_colors[1]
factor(my_colors)
br_colors[which(br_colors == "2- BR")] <- factor(my_colors)[1]
br_colors <- BR
br_colors[which(br_colors == "2- BR")] <- factor(my_colors)[1]
br_colors <- BR
br_colors[which(br_colors == "2- BR")]
colorfac <- factor(my_colors)
br_colors[which(br_colors == "2- BR")] <- colorfac[1]
br_colors <- BR
br_colors
BR_color <- house$Bedrooms
BR_color[BR_color > 5] <- 5
BR_color[BR_color < 2] <- 2
BR_color
BR <- factor(BR, labels = c("2- BR", "3 BR", "4 BR", "5+ BR"))
BR_color <- factor(BR, labels = c("2- BR", "3 BR", "4 BR", "5+ BR"))
BR_color
BR_color <- house$Bedrooms
BR_color[BR_color > 5] <- 5
BR_color[BR_color < 2] <- 2
BR_color[BR_color == 2] <- br_colors[1]
BR_color[BR_color == 3] <- br_colors[2]
BR_color[BR_color == 4] <- br_colors[3]
BR_color[BR_color == 5] <- br_colors[4]
BR_color
br_colors
br_colors[1]
BR_color <- house$Bedrooms
BR_color[BR_color == 2] <- my_colors[1]
BR_color[BR_color == 3] <- my_colors[2]
BR_color[BR_color == 4] <- my_colors[3]
BR_color[BR_color == 5] <- my_colors[4]
BR_color
BR
BR_color <- house$Bedrooms
BR_color[BR_color == 2] <- my_colors[1]
BR_color[BR_color == 3] <- my_colors[2]
BR_color[BR_color == 4] <- my_colors[3]
BR_color[BR_color == 5] <- my_colors[4]
BR_color
br_colors <- house$Bedrooms
br_colors[br_colors == 2] <- my_colors[1]
br_colors[br_colors == 3] <- my_colors[2]
br_colors[br_colors == 4] <- my_colors[3]
br_colors[br_colors == 5] <- my_colors[4]
br_colors
plot(log_price ~ log_livingarea, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
BR_color <- house$Bedrooms
BR
BR_color <- BR
BR_color
BR_color[BR_color == 2] <- my_colors[[1]]
plot(house$Price ~ house$Living.Area, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
plot(house$Price ~ house$Living.Area, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
plot(house$Price ~ house$Living.Area, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
plot(house$Price ~ house$Living.Area, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(BR), title = "# Bedrooms", cex = 0.75)
new.plot()
plot.new()
plot(house$Price ~ house$Living.Area, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(BR), title = "# Bedrooms", cex = 0.75)
br_colors
factor(br_colors)
br_colors <- BR
br_colors
br_colors[1]
br_colors[[1]]
br_colors[br_colors == 2-BR
]
br_colors[br_colors == 2- BR]
br_colors[br_colors == "2- BR"]
br_colors
br_colors[br_colors == "2- BR"] <- my_colors[1]
house$Bedrooms
br_colors <- house$Bedrooms
br_colors[br_colors > 5] <- 5
br_colors[br_colors < 2] <- 2
br_colors
br_colors[br_colors == 2] <- my_colors[1]
br_colors[br_colors == 3] <- my_colors[2]
br_colors[br_colors == 4] <- my_colors[3]
br_colors[br_colors == 5] <- my_colors[4]
br_colors
plot(house$Price ~ house$Living.Area, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(BR), title = "# Bedrooms", cex = 0.75)
fireplaces
house$Fireplaces
FP <- house$Fireplaces
FP[FP == 0] <- "None"
FP[FP >= 1] <- "At least 1"
FP
FP <- house$Fireplaces
FP[FP == 0] <- "None"
FP
FP[FP > 1] <- ""None"At least 1"
FP[FP > 1] <- "At least 1"
FP
FP
br_colors <- house$Bedrooms
br_colors[br_colors > 5] <- 5
br_colors[br_colors < 2] <- 2
br_colors
br_colors[br_colors == 2] <- my_colors[1]
br_colors[br_colors == 3] <- my_colors[2]
br_colors[br_colors == 4] <- my_colors[3]
br_colors[br_colors == 5] <- my_colors[4]
br_colors
FP
FP <- house$Fireplaces
FP
FP[FP == 0] <- "None"
FP[FP != 0] <- "At least 1"
FP
FP[which(FP == "None")]
FP <- house$Fireplaces
FP[FP == 0] <- "None"
FP[FP != "None"] <- "At least 1"
FP
FP <- house$Fireplaces
FP[FP > 1] <- 1
FP
FP <- factor(FP, labels = c("None", "At least 1"))
FP
FP <- house$Fireplaces
FP[FP > 1] <- 1
FP <- factor(FP, labels = c("None", "At least 1"))
FP
plot(house$Price ~ house$Living.Area, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(BR), title = "# Bedrooms", cex = 0.75)
FP <- house$Fireplaces
FP[FP > 1] <- 1
FP <- factor(FP, labels = c("None", "At least 1"))
FP
house
github
repo
house$Lot.Size
house$Living.Area
pricesqft <- house$Price/house$Living.Area
pricesqft
house$Price[1]
house$Price[1] / house$Living.Area[1]
pricesqft[1]
hist(log(pricesqft))
hist(pricesqft)
hist(house$Price)
hist(house$Living.Area)
hist(log_price)
hist(log_livingarea)
hist(log(pricesqft))
hist(log(pricesqft))
hist(pricesqft)
pricesqft[which(pricesqft > 600)]
pricesqft[which(pricesqft > 400)]
pricesqft[which(pricesqft > 300)]
pricesqft[which(pricesqft > 400)]
knitr::opts_chunk$set(echo = TRUE)
#https://github.com/ucb-stat133/stat133-fall-2018/raw/master/data/saratoga.txt
github <- "https://github.com/ucb-stat133/stat133-fall-2018/"
repo <- "raw/master/data/saratoga.txt"
house <- read.table(paste0(github,repo), header = TRUE, sep = "\t")
str(house)
summary(house$Price)
hist(house$Price)
log_price <- log(house$Price)
hist(log_price)
cheap <- log_price < 10.5
sum(cheap)
log_price[log_price < 10.5]
house2 <- subset(house, cheap == FALSE)
summary(house$Living.Area)
hist(house$Living.Area)
log_livingarea <- log(house$Living.Area)
hist(log_livingarea)
BR <- house$Bedrooms
BR[BR > 5] <- 5
BR[BR < 2] <- 2
BR <- factor(BR, labels = c("2- BR", "3 BR", "4 BR", "5+ BR"))
summary(house$Bedrooms)
summary(BR)
br_colors <- house$Bedrooms
br_colors[br_colors > 5] <- 5
br_colors[br_colors < 2] <- 2
br_colors[br_colors == 2] <- my_colors[1]
br_colors[br_colors == 3] <- my_colors[2]
br_colors[br_colors == 4] <- my_colors[3]
br_colors[br_colors == 5] <- my_colors[4]
br_colors
plot(house$Price ~ house$Living.Area, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(BR), title = "# Bedrooms", cex = 0.75)
FP <- house$Fireplaces
FP[FP > 1] <- 1
FP <- factor(FP, labels = c("None", "At least 1"))
FP
pricesqft <- house$Price/house$Living.Area
pricesqft
hist(pricesqft)
hist(house$Price)
hist(house$Living.Area)
hist(log_price)
hist(log_livingarea)
hist(log(pricesqft))
fp_colors <- FP
fp_colors
fp_colors[fp_colors == "None"] <- my_colors[1]
fp_colors[fp_colors == NA] <- my_colors[1]
fp_colors[1] <- my_colors[1]
fp_colors[[1]] <- my_colors[1]
fp_colors <- FP
fp_colors <- house$Fireplaces
fp_colors[fp_colors > 1] <- 1
fp_colors[fp_colors == 1] <- my_colors[2]
fp_colors[fp_colors == 0] <- my_colors[1]
fp_colors
plot(log_price ~ log_livingarea, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(BR), title = "# Bedrooms", cex = 0.75)
plot(log_price ~ log_livingarea, data = house, log = "xy", main = "", xlab = "Living Area (log sq ft)", ylab = "Price (log $)", col = br_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(BR), title = "# Bedrooms", cex = 0.75)
hist(pricesqft)
hist(house$Price)
hist(house$Living.Area)
hist(log_price)
hist(log_livingarea)
hist(log(pricesqft))
plot(log(pricesqft) ~ log_price, data = house, log = "xy", main = "", xlab = "Price per Sq. Ft (log $ per sq ft", ylab = "Priec (log $)", col = fp_colors, pch = 19, cex = 0.4)
legend("bottomright", fill = my_colors, legend = levels(FP), title = "# of Fireplaces", cex = 0.75)
plot(pricesqft ~ house$Price, data = house, log = "xy", main = "", xlab = "Price per Sq. Ft (log $ per sq ft", ylab = "Priec (log $)", col = fp_colors, pch = 19, cex = 0.4)
cor(log_price, log_pricesqft)
log_pricesqft <- log(pricesqft)
cor(log_price, log_pricesqft)
??read.table
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
origin <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data'
destination <- 'abalone.data'
download.file(origin, destination)
ls
ls()
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
column_names <- c("Sex", "Length", "Diameter", "Height", "Whole weight", "Shucked weight", "Viscera weight", "Shell weight", "Rings")
column_types <- c("character", "numeric", "real", "real", "real", "real", "real", "real", "integer")
abalone <- read.table("abalone.data", sep = ",", col.names = column_names, colClasses = column_types)
str(abalone)
abalone2 <- read.csv("abalone.data", sep = ",", col.names = column_names, colClasses = column_types)
str(abalone2)
abalone10 <- head(abalone, 10)
str(abalone10)
abalone20 <- head(abalone, skip = 10, 10)
str(abalone20)
summary(abalone)
apply(abalone, 2, sd)
knitr::opts_chunk$set(echo = TRUE)
git diff HEAD~2 mars.txt
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd
setwd(/Desktop/stat133/warm-ups)
setwd("/Desktop/stat133/warm-ups")
setwd(~/Desktop/stat133/warm-ups)
setwd(Desktop/stat133/warm-ups)
setwd("~/Desktop/stat133/warm-ups")
mkdir warmup04
setwd("./warmup04")
read.csv("nba2018.csv")
install.packages("readr")
library(readr)
read_csv("nba2018.csv", col_types = list(player = col_character, team = col_character))
read_csv("nba2018.csv", col_types = list(player = col_character(), team = col_character(), ))
read_csv("nba2018.csv", col_types = list(player = col_character(), team = col_character(), height = col_character(), birth_date = col_character(), country = col_character(), experience = col_character(), college = col_character(), position = col_factor(levels = c("C", "PF", "PG", "SF", "SG")), salary = col_double(), field_goals_perc = col_double(), points3_perc = col_double(), points2_perc = col_double(), points1_perc = col_double(), effective_field_goal_perc = col_double()))
nba2018_tbl <- read_csv("nba2018.csv", col_types = list(player = col_character(), team = col_character(), height = col_character(), birth_date = col_character(), country = col_character(), experience = col_character(), college = col_character(), position = col_factor(levels = c("C", "PF", "PG", "SF", "SG")), salary = col_double(), field_goals_perc = col_double(), points3_perc = col_double(), points2_perc = col_double(), points1_perc = col_double(), effective_field_goal_perc = col_double()))
str(nba2018_tbl)
experience <- nba2018_tbl$experience
experience[experience = "R"] = "O"
type(experience) = "integer"
type(experience) <-  "integer"
typeof(experience) <-  "integer"
type.convert(experience) <- integer
type.convert(experience) <- "integer"
as.integer(experience)
as.integer
as.numeric()
experience
experience[experience = "R"] = "O"
experience
experience[experience == "R"] = "O"
experience
experience <- nba2018_tbl$experience
experience[experience == "R"] = "O"
experience
summary(experience)
as.integer(experience)
experience <- nba2018_tbl$experience
experience[experience == "R"] = "0"
as.integer(experience)
summary(experience)
experience <- as.integer(experience)
experience <- as.integer(experience)
summary(experience)
salary <- nba2018_tbl$salary
salary/1000000
salary
salary <- salary/1000000
salary
summary(salary)
position <- nba2018_tbl$position
??level
levels(position) <- c("center", "power_fwd", "point_guard", "small_fwd", "shoot_guard")
table(position)
nba2018_tbl
??num
??numrows
??num
nrow(nba2018_tbl$college[nba2018_tbl$college == "University of California, Los Angeles"])
nba2018_tbl$college == "University of California, Los Angeles
""
"
nba2018_tbl$college[nba2018_tbl$college == "University of California, Los Angeles"]
??which
nba2018_tbl$college[which(nba2018_tbl$college == "University of California, Los Angeles")]
nrows(nba2018_tbl$college[which(nba2018_tbl$college == "University of California, Los Angeles")])
num(nba2018_tbl$college[which(nba2018_tbl$college == "University of California, Los Angeles")])
length(nba2018_tbl$college[which(nba2018_tbl$college == "University of California, Los Angeles")])
length(nba2018_tbl$college[which(nba2018_tbl$college == "University of California, Berkeley")])
nba2018_tbl$college[which(nba2018_tbl$college == "University of California, Berkeley")]
max(nba2018_tbl$weight)
nba2018_tbl$player[which(nba2018_tbl$weight == max(nba2018_tbl$weight))]
mean(nba2018_tbl$weight)
summary(nba2018_tbl$salary)
salary <- nba2018_tbl$salary
salary <- salary / 1000000
summary(salary)
summary(nba2018_tbl$salary)
median(salary[which(nba2018_tbl$experience > 10 | nba2018_tbl$experience == 10)])
median(nba2018_tbl$salary[which(nba2018_tbl$experience > 10 | nba2018_tbl$experience == 10)])
median(nba2018_tbl$salary[which(nba2018_tbl$position == "SG" | nba2018_tbl$position == "PG")])
median(salary[which(nba2018_tbl$position == "SG" | nba2018_tbl$position == "PG")])
median(salary[which(nba2018_tbl$position == "PF" & (nba2018_tbl$age == 30 | nba2018_tbl$age > 30) & (nba2018_tbl$weight == 240 | nba2018_tbl$weight > 240))])
median(nba2018_tbl$salary[which(nba2018_tbl$position == "PF" & (nba2018_tbl$age == 30 | nba2018_tbl$age > 30) & (nba2018_tbl$weight == 240 | nba2018_tbl$weight > 240))])
data.frame(nba2018_tbl$player, nba2018_tbl$position, nba2018_tbl$height, nba2018_tbl$weight, nba2018_tbl$age)
gsw <- data.frame(nba2018_tbl$player, nba2018_tbl$position, nba2018_tbl$height, nba2018_tbl$weight, nba2018_tbl$age)
gsw
nba2018_tbl$field_goals_atts - nba2018_tbl$field_goals
nba2018_tbl$missed_field_goals <- nba2018_tbl$field_goals_atts - nba2018_tbl$field_goals
nba2018_tbl$missed_free_throws <- nba2018_tbl$points1_atts - nba2018_tbl$points1
nba2018_tbl
nba2018_tbl$total_rebounds
nba2018_tbl$total_rebounds - nba2018_tbl$off_rebounds
(nba2018_tbl$total_rebounds - nba2018_tbl$off_rebounds) == nba2018_tbl$def_rebounds
nba2018_tbl$total_rebounds <- nba2018_tbl$off_rebounds + nba2018_tbl$def_rebounds
nba2018_tbl
nba2018_tbl$mins_game <- nba2018_tbl$minutes / nba2018_tbl$games
PTS <- nba2018_tbl$points1 + nba2018_tbl$points2 + nba2018_tbl$points3
REB <- nba2018_tbl$total_rebounds
AST <- nba2018_tbl$assists
STL <- nba2018_tbl$steals
BLK <- nba2018_tbl$blocks
MissedFG <- nba2018_tbl$missed_field_goals
MissedFT <- nba2018_tbl$missed_free_throws
TO <- nba2018_tbl$turnovers
GP <- nba2018_tbl$games
EFF <- (PTS + REB + AST + STL + BLK - MissedFG - MissedFT - TO) / GP
nba2018_tbl$efficiency <- EFF
summary(nba2018_tbl$efficiency)
hist(nba2018_tbl$efficiency)
??hist
hist(nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Number of Players")
hist(nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Number of Players", col = "blue")
hist(nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Number of Players", col = "yellow")
hist(nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Number of Players", col = "orange")
hist(nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Number of Players", col = "orange", title(main = "Efficiency v.s. Number of GSW Players ") )
newplot()
plot.new()
hist(nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Number of Players", col = "orange", title(main = "Efficiency v.s. Number of GSW Players ") )
plot.new()
hist(nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Number of Players", col = "orange", main = "Efficiency v.s. Number of GSW Players ")
>>order
??order
sort(nba2018_tbl$efficiency, decreasing = TRUE)
show??
``
??show
??showdataframe
??head
head(nba2018_tbl)
head(nba2018_tbl$player, nba2018_tbl$team, nba2018_tbl$salary, nba2018_tbl$efficiency)
??head
sort(nba2018_tbl$efficiency, decreasing = TRUE)
nba2018_tbl$efficiency == sort(nba2018_tbl$efficiency, decreasing = TRUE)
show
??show
subset(nba2018_tbl, select = c("player", "team", "salary", "efficiency"))
sort(subset(nba2018_tbl, select = c("player", "team", "salary", "efficiency")), decreasing = TRUE)
nba2018_tbl[c("player", "team", "salary", "efficiency")]
nba2018_tbl[c("player", "team", "salary", "efficiency") & which(nba2018_tbl$efficiency, descending = TRUE)]
sortednba <- nba2018_tbl[c("player", "team", "salary", "efficiency")]
sortednba[sort(sortednba$efficiency, descending = TRUE)]
??order
sortednba <- nba2018_tbl[c("player", "team", "salary", "efficiency"), order(-nba2018_tbl$efficiency)]
nba2018_tbl[c("player", "team", "salary", "efficiency"), order(-nba2018_tbl$efficiency)]
nba2018_tbl[c("player", "team", "salary", "efficiency"), order(-efficiency)]
nba2018_tbl[c("player", "team", "salary", "efficiency"), order(-"efficiency")]
nba2018_tbl[c(player, "team", "salary", "efficiency"), order(-"efficiency")]
nba2018_tbl[c(player, "team", "salary", "efficiency"), order(-nba2018_tbl$efficiency)]
nba2018_tbl[c(player, team, salary, efficiency), order(-nba2018_tbl$efficiency)]
nba2018_tbl[order(-nba2018_tbl$efficiency)]
nba2018_tbl[order(-nba2018_tbl$efficiency),]
nba2018_tbl[c(player, "team", "salary", "efficiency"), order(-nba2018_tbl$efficiency),]
nba2018_tbl[c(player, team, salary, efficiency), order(-nba2018_tbl$efficiency),]
nba2018_tbl[c(player, team, salary, efficiency)][order(-nba2018_tbl$efficiency),]
nba2018_tbl[order(-nba2018_tbl$efficiency),]
nba2018_tbl[order(-nba2018_tbl$efficiency),] == nba2018_tbl
nba2018_tbl[order(-nba2018_tbl$efficiency),]
sortednba <- nba2018_tbl[order(-nba2018_tbl$efficiency),]
sortednba[c("player", "team", "salary", "efficiency")]
is.data.frame(sortednba[c("player", "team", "salary", "efficiency")])
head(sortednba)
head(sortednba, n = 10)
head(sortednba[c("player", "team", "salary", "efficiency")], n = 10)
nba2018_tbl[which(nba2018_tbl$efficiency < 0)]
nba2018_tbl$players[nba2018_tbl$efficiency < 0]
nba2018_tbl$player[which(nba2018_tbl$efficiency < 0)]
nba2018_tbl$player[nba2018_tbl$efficiency < 0]
plot(nba2018_tbl$efficiency ~ nba2018_tbl$salary)
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency)
plot.new()
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Salary", col = "teal", pch = 19, cex = 0.4)
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Salary", col = "brown", pch = 19, cex = 0.4)
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Salary", col = "black", pch = 19, cex = 0.4)
log(nba2018_tbl$salary)
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Salary", col = "black", pch = 19, cex = 0.4)
plot(log(nba2018_tbl$salary) ~ log(nba2018_tbl$efficiency), xlab = "Efficiency", ylab = "Salary", col = "black", pch = 19, cex = 0.4)
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Salary", col = "black", pch = 19, cex = 0.4)
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Salary", col = "yellow", pch = 19, cex = 0.4)
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency, xlab = "Efficiency", ylab = "Salary", col = "orange", pch = 19, cex = 0.4)
??bestfit
??linebest
lines(nba2018_tbl$salary, nba2018_tbl$efficiency)
corr(nba2018_tbl$salary, nba2018_tbl$efficiency)
cor(nba2018_tbl$salary, nba2018_tbl$efficiency)
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency, main = "Efficiency v.s. Salary" xlab = "Efficiency", ylab = "Salary", col = "orange", pch = 19, cex = 0.4)
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency, main = "Efficiency v.s. Salary", xlab = "Efficiency", ylab = "Salary", col = "orange", pch = 19, cex = 0.4)
plot(nba2018_tbl$efficiency ~ nba2018_tbl$age, main = "Age v.s. Efficiency", xlab = "Efficiency", ylab = "Salary", col = "orange", pch = 19, cex = 0.4)
plot(nba2018_tbl$efficiency ~ nba2018_tbl$age, main = "Age v.s. Efficiency", xlab = "Age", ylab = "Efficiency", col = "orange", pch = 19, cex = 0.4)
plot.new()
plot(nba2018_tbl$salary, nba2018_tbl$efficiency, main = "Efficiency v.s. Salary", xlab = "Efficiency", ylab = "Salary", col = "orange", pch = 19, cex = 0.4)
plot(nba2018_tbl$salary ~ nba2018_tbl$efficiency, main = "Efficiency v.s. Salary", xlab = "Efficiency", ylab = "Salary", col = "orange", pch = 19, cex = 0.4)
plot(nba2018_tbl$efficiency ~ nba2018_tbl$salary, main = "Efficiency v.s. Salary", xlab = "Efficiency", ylab = "Salary", col = "orange", pch = 19, cex = 0.4)
plot(nba2018_tbl$salary, nba2018_tbl$efficiency, main = "Efficiency v.s. Salary", xlab = "Efficiency", ylab = "Salary", col = "orange", pch = 19, cex = 0.4)
cor(nba2018_tbl$efficiency, nba2018_tbl$salary)
cor(nba2018_tbl$salary, nba2018_tbl$efficiency)
plot(nba2018_tbl$efficiency, nba2018_tbl$salary, main = "Efficiency v.s. Salary", xlab = "Efficiency", ylab = "Salary", col = "orange", pch = 19, cex = 0.4)
plot(nba2018_tbl$efficiency, nba2018_tbl$salary)
plot(nba2018_tbl$age, nba2018_tbl$efficiency, main = "Age v.s. Efficiency", xlab = "Age", ylab = "Efficiency", col = "green", pch = 19, cex = 0.4)
cor(nba2018_tbl$age, nba2018_tbl$efficiency)
plot(nba2018_tbl$rank, nba2018_tbl$efficiency, main = "Rank v.s. Efficiency", xlab = "Rank", ylab = "Efficiency", col = "magenta", pch = 19, cex = 0.4)
cor(nba2018_tbl$rank, nba2018_tbl$efficiency)
nba2018_tbl$missed_field_goals <- (nba2018_tbl$field_goals_atts - nba2018_tbl$field_goals)
nba2018_tbl$field_goals_atts
nba2018_tbl$field_goals
nba2018_tbl$field_goals_atts - nba2018&field_goals
nba2018_tbl$field_goals_atts - nba2018_tbl$field_goals
nba2018_tbl$field_goals_atts - nba2018_tbl$field_goals
knitr::opts_chunk$set(echo = TRUE)
cor(nba2018_tbl$rank, nba2018_tbl$efficiency)
cor(nba2018_tbl$rank, nba2018_tbl$efficiency)
